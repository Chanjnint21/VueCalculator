{"ast":null,"code":"//functions to check if the value inp by user in string or any scpecial characters that're nor number\n\nexport function Value1(newVal) {\n  //check if the inp is NaN\n  if (isNaN(newVal)) {\n    return this.V1Alert = true; // make the alert appear\n  } else {\n    return this.V1Alert = false; //make the alert disappear\n  }\n}\n\nexport function Value2(newVal) {\n  if (isNaN(newVal)) {\n    return this.V2Alert = true;\n  } else {\n    return this.V2Alert = false;\n  }\n}\nexport function Switch() {\n  if (this.Switch) {\n    this.MainID = 'MainID';\n    this.ContainerID = 'ContainerID';\n  } else {\n    this.MainID = '';\n    this.ContainerID = '';\n  }\n}\nexport function Ans() {\n  //convert the inp value to number \n  let V1 = Number(this.Value1);\n  let V2 = Number(this.Value2);\n\n  //check operation condition\n  if (this.add) {\n    return V1 + V2;\n  } else if (this.sub) {\n    return V1 - V2;\n  } else if (this.multi) {\n    return V1 * V2;\n  } else if (this.dev) {\n    return V1 / V2;\n  }\n  return \"\";\n}","map":{"version":3,"names":["Value1","newVal","isNaN","V1Alert","Value2","V2Alert","Switch","MainID","ContainerID","Ans","V1","Number","V2","add","sub","multi","dev"],"sources":["/Users/soramitsukh/Documents/Intern/VueCalculator-1/src/components/WatchValue.js"],"sourcesContent":["//functions to check if the value inp by user in string or any scpecial characters that're nor number\n\nexport function Value1(newVal) {\n    //check if the inp is NaN\n    if (isNaN(newVal)) {\n        return this.V1Alert = true; // make the alert appear\n    } else {\n        return this.V1Alert = false; //make the alert disappear\n    }\n}\n\nexport function Value2(newVal) {\n    if (isNaN(newVal)) {\n        return this.V2Alert = true;\n    } else {\n        return this.V2Alert = false;\n    }\n}\n\nexport function Switch() {\n    if (this.Switch) {\n        this.MainID = 'MainID';\n        this.ContainerID = 'ContainerID'\n    }\n    else {\n        this.MainID = ''\n        this.ContainerID = ''\n    }\n}\n\nexport function Ans() {\n    //convert the inp value to number \n    let V1 = Number(this.Value1)\n    let V2 = Number(this.Value2)\n\n    //check operation condition\n    if (this.add) {\n        return V1 + V2;\n    } else if (this.sub) {\n        return V1 - V2;\n    } else if (this.multi) {\n        return V1 * V2;\n    } else if (this.dev) {\n        return V1 / V2;\n    }\n    return \"\";\n}"],"mappings":"AAAA;;AAEA,OAAO,SAASA,MAAMA,CAACC,MAAM,EAAE;EAC3B;EACA,IAAIC,KAAK,CAACD,MAAM,CAAC,EAAE;IACf,OAAO,IAAI,CAACE,OAAO,GAAG,IAAI,CAAC,CAAC;EAChC,CAAC,MAAM;IACH,OAAO,IAAI,CAACA,OAAO,GAAG,KAAK,CAAC,CAAC;EACjC;AACJ;;AAEA,OAAO,SAASC,MAAMA,CAACH,MAAM,EAAE;EAC3B,IAAIC,KAAK,CAACD,MAAM,CAAC,EAAE;IACf,OAAO,IAAI,CAACI,OAAO,GAAG,IAAI;EAC9B,CAAC,MAAM;IACH,OAAO,IAAI,CAACA,OAAO,GAAG,KAAK;EAC/B;AACJ;AAEA,OAAO,SAASC,MAAMA,CAAA,EAAG;EACrB,IAAI,IAAI,CAACA,MAAM,EAAE;IACb,IAAI,CAACC,MAAM,GAAG,QAAQ;IACtB,IAAI,CAACC,WAAW,GAAG,aAAa;EACpC,CAAC,MACI;IACD,IAAI,CAACD,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,WAAW,GAAG,EAAE;EACzB;AACJ;AAEA,OAAO,SAASC,GAAGA,CAAA,EAAG;EAClB;EACA,IAAIC,EAAE,GAAGC,MAAM,CAAC,IAAI,CAACX,MAAM,CAAC;EAC5B,IAAIY,EAAE,GAAGD,MAAM,CAAC,IAAI,CAACP,MAAM,CAAC;;EAE5B;EACA,IAAI,IAAI,CAACS,GAAG,EAAE;IACV,OAAOH,EAAE,GAAGE,EAAE;EAClB,CAAC,MAAM,IAAI,IAAI,CAACE,GAAG,EAAE;IACjB,OAAOJ,EAAE,GAAGE,EAAE;EAClB,CAAC,MAAM,IAAI,IAAI,CAACG,KAAK,EAAE;IACnB,OAAOL,EAAE,GAAGE,EAAE;EAClB,CAAC,MAAM,IAAI,IAAI,CAACI,GAAG,EAAE;IACjB,OAAON,EAAE,GAAGE,EAAE;EAClB;EACA,OAAO,EAAE;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}