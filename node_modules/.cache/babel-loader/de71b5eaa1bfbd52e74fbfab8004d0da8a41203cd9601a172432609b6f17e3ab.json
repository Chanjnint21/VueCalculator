{"ast":null,"code":"import { Value1, Value2 } from './WatchValue.js';\nexport default {\n  props: {\n    Rcolor: {\n      type: String,\n      required: true\n    },\n    Ecolor: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      Value1: '',\n      Value2: '',\n      //Ans: '',\n      showAlert: '',\n      add: false,\n      sub: false\n    };\n  },\n  watch: {\n    Value1: Value1,\n    Value2: Value2\n  },\n  computed: {\n    Ans() {\n      if (this.add) {\n        return 1;\n      } else if (this.sub) {\n        return 2;\n      }\n      return 0;\n    }\n  },\n  methods: {\n    reset: function () {\n      this.Value1 = '';\n      this.Value2 = '';\n      this.Ans = '';\n    }\n    // add: function(){\n    //     const sum = Number(this.Value1) + Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // sub: function(){\n    //     const sum = Number(this.Value1) - Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // multi: function(){\n    //     const sum = Number(this.Value1) * Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // dev: function(){\n    //     const sum = Number(this.Value1) / Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n  }\n};","map":{"version":3,"names":["Value1","Value2","props","Rcolor","type","String","required","Ecolor","data","showAlert","add","sub","watch","computed","Ans","methods","reset"],"sources":["src/components/VueCalculator.vue"],"sourcesContent":["<template>\n    <v-container class=\" area-calculator bg-surface-variant\">\n        <v-row>\n            <v-col><v-alert v-if=\"showAlert\"  text danse outlined :value=\"showAlert\"  type=\"warning\"  @input=\"showAlert = false\" >Value that are not number will case the error in calculating !</v-alert></v-col>\n            <v-col cols=\"12\"><v-text-field type=\"text\" label=\"1st Value\" variant=\"solo\" v-model=\"Value1\"></v-text-field></v-col>\n            <v-col cols=\"12\"><v-text-field type=\"text\" label=\"2nd Value\" variant=\"solo\" v-model=\"Value2\"></v-text-field></v-col>\n            <!-- <input type=\"text\" :value=\"value\" @input=\"$emit('input', $event.target.value)\" /> -->\n            <v-col><v-text-field label=\"=\" variant=\"solo\" v-model=\"Ans\" model-value=\"0\" readonly ></v-text-field></v-col>\n        </v-row>\n        <v-row class=\"text-center\">\n            <v-col cols=\"2\"><v-btn :value=\"add\"  @click=\"add=true\"> + </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn  :value=\"sub\" v-on:click=\"sub = true\"> - </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn v-on:click=\"multi\"> &times; </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn v-on:click=\"dev\"> &divide; </v-btn></v-col>\n            <v-col cols=\"4\"><v-btn :style=\"{ backgroundColor: Rcolor }\" v-on:click=\"reset\" block>C</v-btn></v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport {Value1, Value2} from './WatchValue.js'\n\nexport default{\n    props: {\n        Rcolor:{\n            type: String,\n            required: true\n        },\n        Ecolor:{\n            type: String,\n            required: true\n        },\n    },\n    data(){\n        return{\n            Value1: '',\n            Value2: '',\n            //Ans: '',\n            showAlert: '',\n            add: false,\n            sub:  false\n\n        }\n    },\n    watch:{\n        Value1: Value1,\n        Value2: Value2,\n    },\n    computed:{\n        Ans(){\n            if(this.add){\n                return 1;\n            } else if( this.sub){\n                return 2;\n            }\n            return 0\n        }\n    },\n    methods:{\n        reset: function(){\n           this.Value1=''\n           this.Value2=''\n           this.Ans=''\n        },\n        // add: function(){\n        //     const sum = Number(this.Value1) + Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // sub: function(){\n        //     const sum = Number(this.Value1) - Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // multi: function(){\n        //     const sum = Number(this.Value1) * Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // dev: function(){\n        //     const sum = Number(this.Value1) / Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n    }\n}\n</script>\n\n<style>\n.area-calculator{\n    width: 600px;\n}\n</style>"],"mappings":"AAoBA,SAAAA,MAAA,EAAAC,MAAA;AAEA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAE,KAAA;IACA;MACAR,MAAA;MACAC,MAAA;MACA;MACAQ,SAAA;MACAC,GAAA;MACAC,GAAA;IAEA;EACA;EACAC,KAAA;IACAZ,MAAA,EAAAA,MAAA;IACAC,MAAA,EAAAA;EACA;EACAY,QAAA;IACAC,IAAA;MACA,SAAAJ,GAAA;QACA;MACA,gBAAAC,GAAA;QACA;MACA;MACA;IACA;EACA;EACAI,OAAA;IACAC,KAAA,WAAAA,CAAA;MACA,KAAAhB,MAAA;MACA,KAAAC,MAAA;MACA,KAAAa,GAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}