{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '../assets/styles.css';\nexport default {\n  props: {\n    Rcolor: {\n      type: String,\n      default: 'warning'\n    },\n    Switch: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      Value1: '',\n      Value2: '',\n      method: '....',\n      Ans: '',\n      MainID: '',\n      ContainerID: '',\n      history: []\n    };\n  },\n  watch: {\n    //check the switch if it true toggle Id to dark mode\n    Switch() {\n      if (this.Switch) {\n        this.MainID = 'MainID';\n        this.ContainerID = 'ContainerID';\n      } else {\n        this.MainID = '';\n        this.ContainerID = '';\n      }\n    }\n  },\n  computed: {\n    // check if the text field of value 1 or 2 is not number show alert\n    showAlert() {\n      if (isNaN(this.Value1) || isNaN(this.Value2)) {\n        return 1;\n      }\n      return 0;\n    },\n    // check if the text field of value 1 or 2 empty disable button\n    isBtnValid() {\n      if (this.Value1 === '' || this.Value2 === '') {\n        return 0;\n      }\n      return 1;\n    }\n  },\n  methods: {\n    reset: function () {\n      this.method = '....';\n      this.Value1 = '';\n      this.Value2 = '';\n      this.Ans = '';\n    },\n    ToHistory(Symbol) {\n      this.history.push(`${this.Value1} ${Symbol} ${this.Value1} = ${this.Ans}`);\n    },\n    ADD: function () {\n      this.method = \"+\";\n      this.Ans = Number(this.Value1) + Number(this.Value2);\n      this.ToHistory('+');\n    },\n    SUB: function () {\n      this.method = \"-\";\n      this.Ans = Number(this.Value1) - Number(this.Value2);\n      this.ToHistory('-');\n    },\n    MULTI: function () {\n      this.method = \"&times;\";\n      this.Ans = Number(this.Value1) * Number(this.Value2);\n      this.ToHistory('&times;');\n    },\n    DEV: function () {\n      this.method = \"&divide;\";\n      this.Ans = Number(this.Value1) / Number(this.Value2);\n      this.ToHistory('&divide;');\n    },\n    floatparse: function () {\n      let paresing = parseInt(this.Ans);\n      return paresing;\n    }\n  }\n};","map":{"version":3,"names":["props","Rcolor","type","String","default","Switch","Boolean","data","Value1","Value2","method","Ans","MainID","ContainerID","history","watch","computed","showAlert","isNaN","isBtnValid","methods","reset","ToHistory","Symbol","push","ADD","Number","SUB","MULTI","DEV","floatparse","paresing","parseInt"],"sources":["src/components/VueCalculator.vue"],"sourcesContent":["<template>\n    <v-main class=\"d-flex align-center justify-center\" :id=\"MainID\">\n        <v-container class=\"area-calculator bg-surface-variant rounded-lg px-12 \" :id=\"ContainerID\">\n\n            <v-row>\n                <!-- Alert -->\n                <v-col cols=\"12\"><v-alert text danse outlined type=\"warning\" v-if=\"showAlert\" :value=\"showAlert\"\n                        @input=\"showAlert = false\">Value that are not number will case the error in calculating\n                        !</v-alert></v-col>\n\n                <!-- value input 1-->\n                <v-col class=\"mt-5\" cols=\"5\"><v-text-field type=\"text\" color=\"green\" label=\"1st Value\" v-model=\"Value1\"\n                        outlined></v-text-field></v-col>\n\n                <!-- display the method -->\n                <v-col class=\"d-flex align-center justify-center\">\n                    <p v-html=\"method\"></p>\n                </v-col>\n\n                <!-- value input 2-->\n                <v-col class=\"mt-5\" cols=\"5\"><v-text-field type=\"text\" color=\"green\" label=\"2nd Value\" v-model=\"Value2\"\n                        outlined></v-text-field></v-col>\n\n                <!-- icon click for histor -->\n                <v-col class=\"d-flex align-center justify-center mb-2\">\n                    <CalHistory :history=\"history\"></CalHistory>\n                </v-col>\n\n                <!-- Result (readonly text field) -->\n                <v-col cols=\"12\"><v-text-field label=\"=\" color=\"green\" variant=\"solo\" :value=\"Ans\"\n                        readonly></v-text-field></v-col>\n            </v-row>\n            <!-- method btns and clear btn -->\n            <v-row class=\"text-center\">\n                <v-col cols=\"2\"><v-btn @click=\"ADD\" :disabled=\"!isBtnValid\"> + </v-btn></v-col>\n                <v-col cols=\"2\"><v-btn @click=\"SUB\" :disabled=\"!isBtnValid\"> - </v-btn></v-col>\n                <v-col cols=\"2\"><v-btn @click=\"MULTI\" :disabled=\"!isBtnValid\"> &times; </v-btn></v-col>\n                <v-col cols=\"2\"><v-btn @click=\"DEV\" :disabled=\"!isBtnValid\"> &divide; </v-btn></v-col>\n                <v-col cols=\"2\"><v-btn :color=\"Rcolor\" v-on:click=\"reset\" block> C </v-btn></v-col>\n                <v-col cols=\"2\"><v-btn color=\"warning\" v-on:click=\"floatparse\" block> Float </v-btn></v-col>\n            </v-row>\n\n        </v-container>\n    </v-main>\n</template>\n\n<script>\nimport '../assets/styles.css'\n\nexport default {\n    props: {\n        Rcolor: {\n            type: String,\n            default: 'warning',\n        },\n        Switch: {\n            type: Boolean\n        }\n    },\n    data() {\n        return {\n            Value1: '',\n            Value2: '',\n            method: '....',\n            Ans: '',\n            MainID: '',\n            ContainerID: '',\n            history: [],\n        }\n    },\n    watch: {\n        //check the switch if it true toggle Id to dark mode\n        Switch() {\n            if (this.Switch) {\n                this.MainID = 'MainID';\n                this.ContainerID = 'ContainerID'\n            }\n            else {\n                this.MainID = ''\n                this.ContainerID = ''\n            }\n        }\n    },\n    computed: {\n        // check if the text field of value 1 or 2 is not number show alert\n        showAlert() {\n            if (isNaN(this.Value1) || isNaN(this.Value2)) {\n                return 1\n            }\n            return 0\n        },\n        // check if the text field of value 1 or 2 empty disable button\n        isBtnValid() {\n            if (this.Value1 === '' || this.Value2 === '') {\n                return 0\n            }\n            return 1\n        }\n    },\n    methods: {\n        reset: function () {\n            this.method = '....'\n            this.Value1 = '';\n            this.Value2 = '';\n            this.Ans = ''\n        },\n        ToHistory(Symbol) {\n            this.history.push(`${this.Value1} ${Symbol} ${this.Value1} = ${this.Ans}`)\n        },\n        ADD: function () {\n            this.method = \"+\"\n            this.Ans = Number(this.Value1) + Number(this.Value2);\n            this.ToHistory('+')\n        },\n        SUB: function () {\n            this.method = \"-\"\n            this.Ans = Number(this.Value1) - Number(this.Value2);\n            this.ToHistory('-')\n        },\n        MULTI: function () {\n            this.method = \"&times;\"\n            this.Ans = Number(this.Value1) * Number(this.Value2);\n            this.ToHistory('&times;')\n        },\n        DEV: function () {\n            this.method = \"&divide;\"\n            this.Ans = Number(this.Value1) / Number(this.Value2);\n            this.ToHistory('&divide;')\n        },\n        floatparse: function(){\n            let paresing = parseInt(this.Ans)\n            return paresing\n        }\n\n    },\n}\n</script>"],"mappings":";AA+CA;AAEA;EACAA,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI;IACA;EACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,GAAA;MACAC,MAAA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACA;IACAV,OAAA;MACA,SAAAA,MAAA;QACA,KAAAO,MAAA;QACA,KAAAC,WAAA;MACA,OACA;QACA,KAAAD,MAAA;QACA,KAAAC,WAAA;MACA;IACA;EACA;EACAG,QAAA;IACA;IACAC,UAAA;MACA,IAAAC,KAAA,MAAAV,MAAA,KAAAU,KAAA,MAAAT,MAAA;QACA;MACA;MACA;IACA;IACA;IACAU,WAAA;MACA,SAAAX,MAAA,gBAAAC,MAAA;QACA;MACA;MACA;IACA;EACA;EACAW,OAAA;IACAC,KAAA,WAAAA,CAAA;MACA,KAAAX,MAAA;MACA,KAAAF,MAAA;MACA,KAAAC,MAAA;MACA,KAAAE,GAAA;IACA;IACAW,UAAAC,MAAA;MACA,KAAAT,OAAA,CAAAU,IAAA,SAAAhB,MAAA,IAAAe,MAAA,SAAAf,MAAA,WAAAG,GAAA;IACA;IACAc,GAAA,WAAAA,CAAA;MACA,KAAAf,MAAA;MACA,KAAAC,GAAA,GAAAe,MAAA,MAAAlB,MAAA,IAAAkB,MAAA,MAAAjB,MAAA;MACA,KAAAa,SAAA;IACA;IACAK,GAAA,WAAAA,CAAA;MACA,KAAAjB,MAAA;MACA,KAAAC,GAAA,GAAAe,MAAA,MAAAlB,MAAA,IAAAkB,MAAA,MAAAjB,MAAA;MACA,KAAAa,SAAA;IACA;IACAM,KAAA,WAAAA,CAAA;MACA,KAAAlB,MAAA;MACA,KAAAC,GAAA,GAAAe,MAAA,MAAAlB,MAAA,IAAAkB,MAAA,MAAAjB,MAAA;MACA,KAAAa,SAAA;IACA;IACAO,GAAA,WAAAA,CAAA;MACA,KAAAnB,MAAA;MACA,KAAAC,GAAA,GAAAe,MAAA,MAAAlB,MAAA,IAAAkB,MAAA,MAAAjB,MAAA;MACA,KAAAa,SAAA;IACA;IACAQ,UAAA,WAAAA,CAAA;MACA,IAAAC,QAAA,GAAAC,QAAA,MAAArB,GAAA;MACA,OAAAoB,QAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}