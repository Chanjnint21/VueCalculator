{"ast":null,"code":"import '../assets/styles.css';\nimport TextFiles from '../components/TextFiles.vue';\nimport BtnComponent from '../components/BtnComponent.vue';\nexport default {\n  name: 'CalPage',\n  components: {\n    TextFiles,\n    BtnComponent\n  },\n  props: {\n    Switch: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      Value1: '',\n      Value2: '',\n      method: '....',\n      Ans: '',\n      MainID: '',\n      ContainerID: '',\n      history: []\n    };\n  },\n  watch: {\n    //check the switch if it true toggle Id to dark mode,\n    Value1(oldval, newVal) {\n      console.log(newVal + oldval);\n    },\n    Switch() {\n      if (this.Switch) {\n        this.MainID = 'MainID';\n        this.ContainerID = 'ContainerID';\n      } else {\n        this.MainID = '';\n        this.ContainerID = '';\n      }\n    }\n  },\n  computed: {\n    // check if the text field of value 1 or 2 empty disable button\n    isBtnValid() {\n      return this.Value1 !== '' && this.Value2 !== '';\n    }\n  }\n  // methods: {\n  // \treset: function () {\n  // \t\tthis.method = '....'\n  // \t\tthis.Value1 = '';\n  // \t\tthis.Value2 = '';\n  // \t\tthis.Ans = ''\n  // \t},\n  // \tToHistory(Symbol) {\n  // \t\tthis.history.push(`${this.Value1} ${Symbol} ${this.Value2} = ${this.Ans}`)\n  // \t},\n  // \tFloatParse() {\n  // \t\tif (this.Ans === '') return; //if the Ans is empty dun parse\n  // \t\tthis.Ans = Math.round(this.Ans * 100) / 100\n  // \t\tthis.ToHistory(this.method); // if the Ans already parse, just return\n\n  // \t},\n  // \tADD: function () {\n  // \t\tthis.method = \"+\"\n  // \t\tthis.Ans = Number(this.Value1) + Number(this.Value2);\n  // \t\tthis.ToHistory('+')\n  // \t},\n  // \tSUB: function () {\n  // \t\tthis.method = \"-\"\n  // \t\tthis.Ans = Number(this.Value1) - Number(this.Value2);\n  // \t\tthis.ToHistory('-')\n  // \t},\n  // \tMULTI: function () {\n  // \t\tthis.method = \"&times;\"\n  // \t\tthis.Ans = Number(this.Value1) * Number(this.Value2);\n  // \t\tthis.ToHistory('&times;')\n  // \t},\n  // \tDEV: function () {\n  // \t\tthis.method = \"&divide;\"\n  // \t\tthis.Ans = Number(this.Value1) / Number(this.Value2);\n  // \t\tthis.ToHistory('&divide;')\n  // \t},\n\n  // },\n};","map":{"version":3,"names":["TextFiles","BtnComponent","name","components","props","Switch","type","Boolean","data","Value1","Value2","method","Ans","MainID","ContainerID","history","watch","oldval","newVal","console","log","computed","isBtnValid"],"sources":["src/views/CalPage.vue"],"sourcesContent":["<template>\n\t<v-main class=\"d-flex align-center justify-center\" :id=\"MainID\">\n\t\t<v-container class=\"area-calculator bg-surface-variant rounded-lg px-12 \" :id=\"ContainerID\">\n\t\t\t<v-row>\n\n\t\t\t\t<!-- value input 1-->\n\t\t\t\t<v-col class=\"mt-5\" cols=\"5\"><text-files v-model=\"Value1\" textlabel=\"1st Value\" textcolor=\"success\" outlined/></v-col>\n\n\t\t\t\t<!-- display the method -->\n\t\t\t\t<v-col class=\"d-flex align-center justify-center\">\n\t\t\t\t\t<p v-html=\"method\"></p>\n\t\t\t\t</v-col>\n\n\t\t\t\t<!-- value input 2-->\n\t\t\t\t<v-col class=\"mt-5\" cols=\"5\"><text-files v-model=\"Value2\"  textlabel=\"2nd Value\" textcolor=\"success\" outlined/></v-col>\n\n\t\t\t\t<!-- icon click for histor -->\n\t\t\t\t<v-col class=\"d-flex align-center justify-center mb-2\">\n\t\t\t\t\t<CalHistory :history=\"history\"/>\n\t\t\t\t</v-col>\n\n\t\t\t\t<!-- Result (readonly text field) -->\n\t\t\t\t<v-col cols=\"12\"><v-text-field label=\"=\" color=\"green\" variant=\"solo\" :value=\"Ans\"\n\t\t\t\t\t\treadonly></v-text-field>\n\t\t\t\t</v-col>\n\t\t\t</v-row>\n\t\t\t<!-- method btns and clear btn -->\n\t\t\t<v-row >\n\t\t\t\t<v-col cols=\"2\"><btn-component @click=\"ADD\" CalMethod=\"+\" outlined/></v-col>\n\t\t\t\t<v-col cols=\"2\"><btn-component CalMethod=\"-\" outlined/></v-col>\n\t\t\t\t<v-col cols=\"2\"><btn-component CalMethod=\"&times;\" outlined/></v-col>\n\t\t\t\t<v-col cols=\"2\"><btn-component CalMethod=\"&divide;\" outlined/></v-col>\n\t\t\t\t<v-col cols=\"2\"><btn-component btncolor='error' CalMethod=\"C\"/></v-col>\n\t\t\t\t<v-col cols=\"2\"><btn-component btncolor=\"success\" CalMethod=\".00\"/></v-col>\n\t\t\t</v-row>\n\t\t</v-container>\n\t</v-main>\n</template>\n\n<script>\nimport '../assets/styles.css'\nimport TextFiles from '../components/TextFiles.vue'\nimport BtnComponent from '../components/BtnComponent.vue';\n\nexport default {\n\tname: 'CalPage',\n\tcomponents:{\n\t\tTextFiles,\n\t\tBtnComponent,\n\t},\n\tprops: {\n\t\tSwitch: {\n\t\t\ttype: Boolean\n\t\t}\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tValue1: '',\n\t\t\tValue2: '',\n\t\t\tmethod: '....',\n\t\t\tAns: '',\n\t\t\tMainID: '',\n\t\t\tContainerID: '',\n\t\t\thistory: [],\n\t\t}\n\t},\n\twatch: {\n\t\t//check the switch if it true toggle Id to dark mode,\n\t\tValue1(oldval, newVal){\n\t\t\tconsole.log(newVal + oldval)\n\t\t},\n\t\tSwitch() {\n\t\t\tif (this.Switch) {\n\t\t\t\tthis.MainID = 'MainID';\n\t\t\t\tthis.ContainerID = 'ContainerID'\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.MainID = ''\n\t\t\t\tthis.ContainerID = ''\n\t\t\t}\n\t\t},\n\t},\n\tcomputed: {\n\t\t// check if the text field of value 1 or 2 empty disable button\n\t\tisBtnValid() {\n\t\t\treturn this.Value1 !== '' && this.Value2 !== ''\n\t\t},\n\t},\n\t// methods: {\n\t// \treset: function () {\n\t// \t\tthis.method = '....'\n\t// \t\tthis.Value1 = '';\n\t// \t\tthis.Value2 = '';\n\t// \t\tthis.Ans = ''\n\t// \t},\n\t// \tToHistory(Symbol) {\n\t// \t\tthis.history.push(`${this.Value1} ${Symbol} ${this.Value2} = ${this.Ans}`)\n\t// \t},\n\t// \tFloatParse() {\n\t// \t\tif (this.Ans === '') return; //if the Ans is empty dun parse\n\t// \t\tthis.Ans = Math.round(this.Ans * 100) / 100\n\t// \t\tthis.ToHistory(this.method); // if the Ans already parse, just return\n\n\t// \t},\n\t// \tADD: function () {\n\t// \t\tthis.method = \"+\"\n\t// \t\tthis.Ans = Number(this.Value1) + Number(this.Value2);\n\t// \t\tthis.ToHistory('+')\n\t// \t},\n\t// \tSUB: function () {\n\t// \t\tthis.method = \"-\"\n\t// \t\tthis.Ans = Number(this.Value1) - Number(this.Value2);\n\t// \t\tthis.ToHistory('-')\n\t// \t},\n\t// \tMULTI: function () {\n\t// \t\tthis.method = \"&times;\"\n\t// \t\tthis.Ans = Number(this.Value1) * Number(this.Value2);\n\t// \t\tthis.ToHistory('&times;')\n\t// \t},\n\t// \tDEV: function () {\n\t// \t\tthis.method = \"&divide;\"\n\t// \t\tthis.Ans = Number(this.Value1) / Number(this.Value2);\n\t// \t\tthis.ToHistory('&divide;')\n\t// \t},\n\n\t// },\n}\n</script>"],"mappings":"AAwCA;AACA,OAAAA,SAAA;AACA,OAAAC,YAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,SAAA;IACAC;EACA;EACAG,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC;IACA;EACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,GAAA;MACAC,MAAA;MACAC,WAAA;MACAC,OAAA;IACA;EACA;EACAC,KAAA;IACA;IACAP,OAAAQ,MAAA,EAAAC,MAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA,GAAAD,MAAA;IACA;IACAZ,OAAA;MACA,SAAAA,MAAA;QACA,KAAAQ,MAAA;QACA,KAAAC,WAAA;MACA,OACA;QACA,KAAAD,MAAA;QACA,KAAAC,WAAA;MACA;IACA;EACA;EACAO,QAAA;IACA;IACAC,WAAA;MACA,YAAAb,MAAA,gBAAAC,MAAA;IACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}