{"ast":null,"code":"import Ans from './WatchValue.js';\nexport default {\n  props: {\n    Rcolor: {\n      type: String,\n      required: true\n    },\n    Ecolor: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      Value1: '0',\n      Value2: '0',\n      showAlert: ''\n    };\n  },\n  watch: {\n    Ans: Ans\n  },\n  computed: {\n    Ans(addvalue) {\n      const Value1 = parseFloat(this.Value1);\n      const Value2 = parseFloat(this.Value2);\n      if (addvalue === true) {\n        Ans = Value1 + Value2;\n      }\n      return Ans;\n    }\n  },\n  methods: {\n    reset: function () {\n      this.Value1 = '';\n      this.Value2 = '';\n      this.Ans = '';\n    },\n    add: function () {\n      const addvalue = true;\n      Ans(addvalue);\n    }\n    // sub: function(){\n    //     const sum = parseFloat(this.Value1) - parseFloat(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // multi: function(){\n    //     const sum = parseFloat(this.Value1) * parseFloat(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // dev: function(){\n    //     const sum = parseFloat(this.Value1) / parseFloat(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // Equals: function(){\n    //     this.Ans = eval(this.Value)\n    //     console.log(this.Ans);\n    // }\n  }\n};","map":{"version":3,"names":["Ans","props","Rcolor","type","String","required","Ecolor","data","Value1","Value2","showAlert","watch","computed","addvalue","parseFloat","methods","reset","add"],"sources":["src/components/VueCalculator.vue"],"sourcesContent":["<template>\n    <v-container class=\" area-calculator bg-surface-variant\">\n        <v-row>\n            <v-col><v-alert v-if=\"showAlert\" :value=\"showAlert\" type=\"error\" dismissible @input=\"showAlert = false\" > The following output is invalid due to the error in value !</v-alert></v-col>\n            <v-col cols=\"12\"><v-text-field type=\"text\" label=\"1st Value\" variant=\"solo\" v-model=\"Value1\"></v-text-field></v-col>\n            <v-col cols=\"12\"><v-text-field type=\"text\" label=\"2nd Value\" variant=\"solo\" v-model=\"Value2\"></v-text-field></v-col>\n            <!-- <input type=\"text\" :value=\"value\" @input=\"$emit('input', $event.target.value)\" /> -->\n            <!-- <v-col><v-text-field label=\"=\" variant=\"solo\" v-model=\"Ans\" model-value=\"0\" readonly ></v-text-field></v-col> -->\n            <v-col><p>= {{ Ans }}</p></v-col>\n        </v-row>\n        <v-row class=\"text-center\">\n            <v-col cols=\"2\"><v-btn v-on:click=\"addvalue === true\">+</v-btn></v-col>\n            <v-col cols=\"2\"><v-btn v-on:click=\"sub\">-</v-btn></v-col>\n            <v-col cols=\"2\"><v-btn v-on:click=\"multi\">x</v-btn></v-col>\n            <v-col cols=\"2\"><v-btn v-on:click=\"dev\">/</v-btn></v-col>\n            <v-col cols=\"4\"><v-btn :style=\"{ backgroundColor: Rcolor }\" v-on:click=\"reset\" block>C</v-btn></v-col>\n        </v-row>\n    </v-container>\n</template>\n\n<script>\nimport Ans from './WatchValue.js'\n\nexport default{\n    props: {\n        Rcolor:{\n            type: String,\n            required: true\n        },\n        Ecolor:{\n            type: String,\n            required: true\n        },\n    },\n    data(){\n        return{\n            Value1: '0',\n            Value2: '0',\n            showAlert: '',\n        }\n    },\n    watch:{\n        Ans: Ans\n    },\n    computed:{\n        Ans(addvalue){\n            const Value1 = parseFloat(this.Value1)\n            const Value2 = parseFloat(this.Value2)\n            if(addvalue === true){\n                Ans = Value1 + Value2\n            }\n            return Ans\n        }\n    },\n    methods:{\n        reset: function(){\n           this.Value1=''\n           this.Value2=''\n           this.Ans=''\n        },\n        add: function(){\n            const addvalue = true;\n            Ans(addvalue)\n        },\n        // sub: function(){\n        //     const sum = parseFloat(this.Value1) - parseFloat(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // multi: function(){\n        //     const sum = parseFloat(this.Value1) * parseFloat(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // dev: function(){\n        //     const sum = parseFloat(this.Value1) / parseFloat(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // Equals: function(){\n        //     this.Ans = eval(this.Value)\n        //     console.log(this.Ans);\n        // }\n    }\n}\n</script>\n\n<style>\n.area-calculator{\n    width: 600px;\n}\n</style>"],"mappings":"AAqBA,OAAAA,GAAA;AAEA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAE,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,KAAA;IACAX,GAAA,EAAAA;EACA;EACAY,QAAA;IACAZ,IAAAa,QAAA;MACA,MAAAL,MAAA,GAAAM,UAAA,MAAAN,MAAA;MACA,MAAAC,MAAA,GAAAK,UAAA,MAAAL,MAAA;MACA,IAAAI,QAAA;QACAb,GAAA,GAAAQ,MAAA,GAAAC,MAAA;MACA;MACA,OAAAT,GAAA;IACA;EACA;EACAe,OAAA;IACAC,KAAA,WAAAA,CAAA;MACA,KAAAR,MAAA;MACA,KAAAC,MAAA;MACA,KAAAT,GAAA;IACA;IACAiB,GAAA,WAAAA,CAAA;MACA,MAAAJ,QAAA;MACAb,GAAA,CAAAa,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}