{"ast":null,"code":"import { Value1, Value2 } from './WatchValue.js';\nexport default {\n  props: {\n    method: {\n      type: String,\n      default: \"....\"\n    },\n    cbtn: {\n      type: Boolean\n    }\n  },\n  data() {\n    return {\n      Value1: '',\n      Value2: '',\n      showAlert: '',\n      add: false,\n      sub: false,\n      multi: false,\n      dev: false\n    };\n  },\n  watch: {\n    Value1: Value1,\n    Value2: Value2\n  },\n  computed: {\n    Ans() {\n      //convert the inp value to number \n      let V1 = Number(this.Value1);\n      let V2 = Number(this.Value2);\n\n      //check operation condition\n      if (this.add) {\n        return V1 + V2;\n      } else if (this.sub) {\n        return V1 - V2;\n      } else if (this.multi) {\n        return V1 * V2;\n      } else if (this.dev) {\n        return V1 / V2;\n      }\n      return 0;\n    }\n  }\n  // methods:{\n  //     reset: function(){\n  //        this.Value1='';\n  //        this.Value2='';\n  //        this.add = this.sub = this.multi = this.dev = false;\n  //        this.Ans= ''\n  //     },\n  //     ADD: function(){\n  //         this.add = true;\n  //         this.sub = this.multi = this.dev = false;\n  //     },\n  //     SUB: function(){\n  //         this.sub = true;\n  //         this.add = this.multi = this.dev = false;\n  //     },\n  //     MULTI: function(){\n  //         this.multi = true;\n  //         this.sub = this.add = this.dev = false;\n  //     },\n  //     DEV: function(){\n  //         this.dev = true;\n  //         this.sub = this.multi = this.add = false;\n  //     },\n\n  // ADD: function(){\n  //     const sum = Number(this.Value1) * Number(this.Value2)\n  //     this.Ans = sum;\n  // },\n  // SUB: function(){\n  //     const sum = Number(this.Value1) / Number(this.Value2)\n  //     this.Ans = sum;\n  // },\n  // MULTI: function(){\n  //     const sum = Number(this.Value1) * Number(this.Value2)\n  //     this.Ans = sum;\n  // },\n  // DEV: function(){\n  //     const sum = Number(this.Value1) / Number(this.Value2)\n  //     this.Ans = sum;\n  // },\n  // }\n};","map":{"version":3,"names":["Value1","Value2","props","method","type","String","default","cbtn","Boolean","data","showAlert","add","sub","multi","dev","watch","computed","Ans","V1","Number","V2"],"sources":["src/components/VueCalculator.vue"],"sourcesContent":["<template>\n    <v-container class=\" area-calculator bg-surface-variant\">\n        <v-row>\n            <v-col cols=\"12\"><v-alert text danse outlined type=\"warning\" v-if=\"showAlert\" :value=\"showAlert\" @input=\"showAlert = false\" >Value that are not number will case the error in calculating !</v-alert></v-col>\n            <v-col cols=\"5\"><v-text-field type=\"text\" label=\"1st Value\" v-model=\"Value1\" outlined></v-text-field></v-col>\n            <v-col class=\"d-flex align-center justify-center\"><p>{{ method }}</p></v-col>\n            <v-col cols=\"5\"><v-text-field type=\"text\" label=\"2nd Value\" v-model=\"Value2\" outlined></v-text-field></v-col>\n            <!-- <input type=\"text\" :value=\"value\" @input=\"$emit('input', $event.target.value)\" /> -->\n            <v-col cols=\"12\"><v-text-field label=\"=\" variant=\"solo\" v-model=\"Ans\" model-value=\"0\" readonly ></v-text-field></v-col>\n        </v-row>\n        <!-- <v-row class=\"text-center\">\n            <v-col cols=\"2\"><v-btn @click=\"ADD\"> + </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn @click=\"SUB\"> - </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn @click=\"MULTI\"> &times; </v-btn></v-col>\n            <v-col cols=\"2\"><v-btn @click=\"DEV\"> &divide; </v-btn></v-col>\n            <v-col cols=\"4\"><v-btn :color=\"Rcolor\" v-on:click=\"reset\" block>C</v-btn></v-col>\n        </v-row> -->\n    </v-container>\n</template>\n\n<script>\nimport {Value1, Value2} from './WatchValue.js'\n\nexport default{\n    props: {\n        method:{\n            type: String,\n            default: \"....\"\n        },\n        cbtn: {\n            type: Boolean\n        }\n    },\n    data(){\n        return{\n            Value1: '',\n            Value2: '',\n            showAlert: '',\n            add: false,\n            sub: false,\n            multi: false,\n            dev: false\n        }\n    },\n    watch:{\n        Value1: Value1,\n        Value2: Value2,\n    },\n    computed:{\n        Ans(){\n            //convert the inp value to number \n            let V1 = Number(this.Value1)\n            let V2 = Number(this.Value2)\n\n            //check operation condition\n            if(this.add){\n                return V1 + V2;\n            } else if( this.sub){\n                return V1 - V2;\n            }else if( this.multi){\n                return V1 * V2;\n            }else if( this.dev){\n                return V1 / V2;\n            }\n            return 0;\n        }\n    },\n    // methods:{\n    //     reset: function(){\n    //        this.Value1='';\n    //        this.Value2='';\n    //        this.add = this.sub = this.multi = this.dev = false;\n    //        this.Ans= ''\n    //     },\n    //     ADD: function(){\n    //         this.add = true;\n    //         this.sub = this.multi = this.dev = false;\n    //     },\n    //     SUB: function(){\n    //         this.sub = true;\n    //         this.add = this.multi = this.dev = false;\n    //     },\n    //     MULTI: function(){\n    //         this.multi = true;\n    //         this.sub = this.add = this.dev = false;\n    //     },\n    //     DEV: function(){\n    //         this.dev = true;\n    //         this.sub = this.multi = this.add = false;\n    //     },\n\n        // ADD: function(){\n        //     const sum = Number(this.Value1) * Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // SUB: function(){\n        //     const sum = Number(this.Value1) / Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // MULTI: function(){\n        //     const sum = Number(this.Value1) * Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // DEV: function(){\n        //     const sum = Number(this.Value1) / Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n    // }\n}\n</script>\n\n<style>\n.area-calculator{\n    width: 600px;\n}\n</style>"],"mappings":"AAqBA,SAAAA,MAAA,EAAAC,MAAA;AAEA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI;IACA;EACA;EACAC,KAAA;IACA;MACAT,MAAA;MACAC,MAAA;MACAS,SAAA;MACAC,GAAA;MACAC,GAAA;MACAC,KAAA;MACAC,GAAA;IACA;EACA;EACAC,KAAA;IACAf,MAAA,EAAAA,MAAA;IACAC,MAAA,EAAAA;EACA;EACAe,QAAA;IACAC,IAAA;MACA;MACA,IAAAC,EAAA,GAAAC,MAAA,MAAAnB,MAAA;MACA,IAAAoB,EAAA,GAAAD,MAAA,MAAAlB,MAAA;;MAEA;MACA,SAAAU,GAAA;QACA,OAAAO,EAAA,GAAAE,EAAA;MACA,gBAAAR,GAAA;QACA,OAAAM,EAAA,GAAAE,EAAA;MACA,gBAAAP,KAAA;QACA,OAAAK,EAAA,GAAAE,EAAA;MACA,gBAAAN,GAAA;QACA,OAAAI,EAAA,GAAAE,EAAA;MACA;MACA;IACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}