{"ast":null,"code":"import '../assets/styles.css';\nimport { Value1, Value2 } from './WatchValue.js';\nimport MethodBtn from './MethodBtn.vue';\nexport default {\n  props: {\n    Rcolor: {\n      type: String,\n      default: 'warning'\n    },\n    Switch: {\n      type: Boolean\n    }\n  },\n  components: {\n    MethodBtn\n  },\n  data() {\n    return {\n      Value1: '',\n      Value2: '',\n      V1Alert: '',\n      V2Alert: '',\n      method: '....',\n      add: false,\n      sub: false,\n      multi: false,\n      dev: false,\n      MainID: '',\n      ContainerID: ''\n    };\n  },\n  watch: {\n    Value1: Value1,\n    Value2: Value2,\n    Switch() {\n      if (this.Switch) {\n        this.MainID = 'MainID';\n        this.ContainerID = 'ContainerID';\n      } else {\n        this.MainID = '';\n        this.ContainerID = '';\n      }\n    }\n  },\n  computed: {\n    Ans() {\n      //convert the inp value to number \n      let V1 = Number(this.Value1);\n      let V2 = Number(this.Value2);\n\n      //check operation condition\n      if (this.add) {\n        return V1 + V2;\n      } else if (this.sub) {\n        return V1 - V2;\n      } else if (this.multi) {\n        return V1 * V2;\n      } else if (this.dev) {\n        return V1 / V2;\n      }\n      return \"\";\n    },\n    showAlert() {\n      if (this.V1Alert === true || this.V2Alert === true) {\n        return 1;\n      }\n      return 0;\n    }\n  },\n  methods: {\n    reset: function () {\n      this.method = '....';\n      this.Value1 = '';\n      this.Value2 = '';\n      this.add = this.sub = this.multi = this.dev = false;\n    },\n    ADD: function () {\n      this.method = \"+\";\n      this.add = true;\n      this.sub = this.multi = this.dev = false;\n    },\n    SUB: function () {\n      this.method = \"-\";\n      this.sub = true;\n      this.add = this.multi = this.dev = false;\n    },\n    MULTI: function () {\n      this.method = \"&times;\";\n      this.multi = true;\n      this.sub = this.add = this.dev = false;\n    },\n    DEV: function () {\n      this.method = \"&divide;\";\n      this.dev = true;\n      this.sub = this.multi = this.add = false;\n    }\n\n    // ADD: function(){\n    //     const sum = Number(this.Value1) * Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // SUB: function(){\n    //     const sum = Number(this.Value1) / Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // MULTI: function(){\n    //     const sum = Number(this.Value1) * Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n    // DEV: function(){\n    //     const sum = Number(this.Value1) / Number(this.Value2)\n    //     this.Ans = sum;\n    // },\n  }\n};","map":{"version":3,"names":["Value1","Value2","MethodBtn","props","Rcolor","type","String","default","Switch","Boolean","components","data","V1Alert","V2Alert","method","add","sub","multi","dev","MainID","ContainerID","watch","computed","Ans","V1","Number","V2","showAlert","methods","reset","ADD","SUB","MULTI","DEV"],"sources":["src/components/VueCalculator.vue"],"sourcesContent":["<template>\n    <v-main class=\"d-flex align-center justify-center\" :id=\" MainID \">\n        <v-container class=\"area-calculator bg-surface-variant rounded-lg px-12 \" :id=\" ContainerID \">\n            <v-row >\n                <v-col cols=\"12\"><v-alert text danse outlined type=\"warning\" v-if=\"showAlert\" :value=\"showAlert\"\n                        @input=\"showAlert = false\">Value that are not number will case the error in calculating\n                        !</v-alert></v-col>\n                <v-col class=\"mt-5\" cols=\"5\"><v-text-field type=\"text\" color=\"green\" label=\"1st Value\" v-model=\"Value1\"\n                        outlined></v-text-field></v-col>\n                <v-col class=\"d-flex align-center justify-center\">\n                    <p v-html=\"method\"></p>\n                </v-col>\n                <v-col class=\"mt-5\" cols=\"5\"><v-text-field type=\"text\" color=\"green\" label=\"2nd Value\" v-model=\"Value2\"\n                        outlined></v-text-field></v-col>\n                <v-col cols=\"12\"><v-text-field label=\"=\" color=\"green\" variant=\"solo\" :value=\"Ans\"\n                        readonly></v-text-field></v-col>\n            </v-row>\n            <v-row class=\"text-center\">\n                <MethodBtn></MethodBtn>\n                <v-col cols=\"4\"><v-btn :color=\"Rcolor\" v-on:click=\"reset\" block> C </v-btn></v-col>\n            </v-row>\n        </v-container>\n    </v-main>\n</template>\n\n<script>\nimport '../assets/styles.css'\nimport { Value1, Value2 } from './WatchValue.js'\nimport MethodBtn from './MethodBtn.vue'\n\nexport default {\n    props: {\n        Rcolor: {\n            type: String,\n            default: 'warning',\n        },\n        Switch: {\n            type: Boolean\n        }\n    },\n    components:{\n        MethodBtn\n    },\n    data() {\n        return {\n            Value1: '',\n            Value2: '',\n            V1Alert: '',\n            V2Alert: '',\n            method: '....',\n            add: false,\n            sub: false,\n            multi: false,\n            dev: false,\n            MainID: '',\n            ContainerID: '',\n        }\n    },\n    watch: {\n        Value1: Value1,\n        Value2: Value2,\n        Switch() {\n            if (this.Switch) {\n                this.MainID = 'MainID';\n                this.ContainerID = 'ContainerID'\n            }\n            else {\n                this.MainID = ''\n                this.ContainerID = ''\n            }\n        }\n    },\n    computed: {\n        Ans() {\n            //convert the inp value to number \n            let V1 = Number(this.Value1)\n            let V2 = Number(this.Value2)\n\n            //check operation condition\n            if (this.add) {\n                return V1 + V2;\n            } else if (this.sub) {\n                return V1 - V2;\n            } else if (this.multi) {\n                return V1 * V2;\n            } else if (this.dev) {\n                return V1 / V2;\n            }\n            return \"\";\n        },\n        showAlert(){\n            if(this.V1Alert === true || this.V2Alert === true){\n                return 1\n            }\n            return 0\n        },\n    },\n    methods: {\n        reset: function () {\n            this.method = '....'\n            this.Value1 = '';\n            this.Value2 = '';\n            this.add = this.sub = this.multi = this.dev = false;\n        },\n        ADD: function () {\n            this.method = \"+\"\n            this.add = true;\n            this.sub = this.multi = this.dev = false;\n        },\n        SUB: function () {\n            this.method = \"-\"\n            this.sub = true;\n            this.add = this.multi = this.dev = false;\n        },\n        MULTI: function () {\n            this.method = \"&times;\"\n            this.multi = true;\n            this.sub = this.add = this.dev = false;\n        },\n        DEV: function () {\n            this.method = \"&divide;\"\n            this.dev = true;\n            this.sub = this.multi = this.add = false;\n        },\n\n        // ADD: function(){\n        //     const sum = Number(this.Value1) * Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // SUB: function(){\n        //     const sum = Number(this.Value1) / Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // MULTI: function(){\n        //     const sum = Number(this.Value1) * Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n        // DEV: function(){\n        //     const sum = Number(this.Value1) / Number(this.Value2)\n        //     this.Ans = sum;\n        // },\n    }\n}\n</script>"],"mappings":"AA0BA;AACA,SAAAA,MAAA,EAAAC,MAAA;AACA,OAAAC,SAAA;AAEA;EACAC,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,MAAA;MACAH,IAAA,EAAAI;IACA;EACA;EACAC,UAAA;IACAR;EACA;EACAS,KAAA;IACA;MACAX,MAAA;MACAC,MAAA;MACAW,OAAA;MACAC,OAAA;MACAC,MAAA;MACAC,GAAA;MACAC,GAAA;MACAC,KAAA;MACAC,GAAA;MACAC,MAAA;MACAC,WAAA;IACA;EACA;EACAC,KAAA;IACArB,MAAA,EAAAA,MAAA;IACAC,MAAA,EAAAA,MAAA;IACAO,OAAA;MACA,SAAAA,MAAA;QACA,KAAAW,MAAA;QACA,KAAAC,WAAA;MACA,OACA;QACA,KAAAD,MAAA;QACA,KAAAC,WAAA;MACA;IACA;EACA;EACAE,QAAA;IACAC,IAAA;MACA;MACA,IAAAC,EAAA,GAAAC,MAAA,MAAAzB,MAAA;MACA,IAAA0B,EAAA,GAAAD,MAAA,MAAAxB,MAAA;;MAEA;MACA,SAAAc,GAAA;QACA,OAAAS,EAAA,GAAAE,EAAA;MACA,gBAAAV,GAAA;QACA,OAAAQ,EAAA,GAAAE,EAAA;MACA,gBAAAT,KAAA;QACA,OAAAO,EAAA,GAAAE,EAAA;MACA,gBAAAR,GAAA;QACA,OAAAM,EAAA,GAAAE,EAAA;MACA;MACA;IACA;IACAC,UAAA;MACA,SAAAf,OAAA,kBAAAC,OAAA;QACA;MACA;MACA;IACA;EACA;EACAe,OAAA;IACAC,KAAA,WAAAA,CAAA;MACA,KAAAf,MAAA;MACA,KAAAd,MAAA;MACA,KAAAC,MAAA;MACA,KAAAc,GAAA,QAAAC,GAAA,QAAAC,KAAA,QAAAC,GAAA;IACA;IACAY,GAAA,WAAAA,CAAA;MACA,KAAAhB,MAAA;MACA,KAAAC,GAAA;MACA,KAAAC,GAAA,QAAAC,KAAA,QAAAC,GAAA;IACA;IACAa,GAAA,WAAAA,CAAA;MACA,KAAAjB,MAAA;MACA,KAAAE,GAAA;MACA,KAAAD,GAAA,QAAAE,KAAA,QAAAC,GAAA;IACA;IACAc,KAAA,WAAAA,CAAA;MACA,KAAAlB,MAAA;MACA,KAAAG,KAAA;MACA,KAAAD,GAAA,QAAAD,GAAA,QAAAG,GAAA;IACA;IACAe,GAAA,WAAAA,CAAA;MACA,KAAAnB,MAAA;MACA,KAAAI,GAAA;MACA,KAAAF,GAAA,QAAAC,KAAA,QAAAF,GAAA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}